{"ast":null,"code":"// Archivo: LogicaCampoFormulario.js\n\nconst camposBase = [{\n  name: 'id',\n  label: 'ID',\n  type: 'number'\n}, {\n  name: 'nombre',\n  label: 'Nombre del Producto',\n  type: 'text'\n}, {\n  name: 'cantidad',\n  label: 'Cantidad',\n  type: 'number'\n}, {\n  name: 'numero_factura_orden',\n  label: 'Número Factura u Orden',\n  type: 'text'\n}, {\n  name: 'ubicacion',\n  label: 'Ubicación',\n  type: 'text'\n}, {\n  name: 'custodia',\n  label: 'Custodia',\n  type: 'select',\n  options: ['Área A', 'Área B', 'Área C']\n}, {\n  name: 'proveedor',\n  label: 'Proveedor',\n  type: 'select',\n  options: ['Proveedor 1', 'Proveedor 2', 'Proveedor 3']\n}, {\n  name: 'fecha_ingreso',\n  label: 'Fecha de Ingreso',\n  type: 'datetime-local'\n}, {\n  name: 'fecha_entrega',\n  label: 'Fecha de Entrega',\n  type: 'datetime-local'\n}, {\n  name: 'tipo_movimiento',\n  label: 'Tipo de Movimiento',\n  type: 'select',\n  options: ['Traslado', 'Ventas', 'Garantías', 'Devoluciones', 'Dar baja', 'Buscar']\n}, {\n  name: 'descripcion',\n  label: 'Descripción',\n  type: 'textarea'\n}];\nexport function obtenerCamposPorAccion(accion) {\n  let campos = [...camposBase];\n  if (accion === 'Entradas') {\n    campos = campos.filter(c => c.name !== 'fecha_entrega');\n    campos = campos.filter(c => c.name !== 'fecha_ingreso' || c.name === 'tipo_movimiento');\n  } else if (accion === 'Salidas') {\n    campos = campos.filter(c => c.name !== 'fecha_ingreso');\n  } else if (accion === 'Modificar' || accion === 'Buscar') {\n    campos = campos.map(c => ({\n      ...c,\n      required: false\n    }));\n  } else if (accion === 'Dar de Baja' || accion === 'Habilitar') {\n    campos.push({\n      name: 'estado',\n      label: 'Estado',\n      type: 'select',\n      options: ['activo', 'dar de baja']\n    });\n  }\n  if (accion === 'Ver') {\n    return [];\n  }\n  return campos;\n}","map":{"version":3,"names":["camposBase","name","label","type","options","obtenerCamposPorAccion","accion","campos","filter","c","map","required","push"],"sources":["C:/Users/ANDRES/Documents/ADSO/TRANSVERSAL/TRANSVERSAL PROGRAMACIION/PROYECTO/protecto stely/CatalogoReact/catalogoRopa/src/componentes/logica/LogicaCampoFormulario.js"],"sourcesContent":["// Archivo: LogicaCampoFormulario.js\r\n\r\nconst camposBase = [\r\n  { name: 'id', label: 'ID', type: 'number' },\r\n  { name: 'nombre', label: 'Nombre del Producto', type: 'text' },\r\n  { name: 'cantidad', label: 'Cantidad', type: 'number' },\r\n  { name: 'numero_factura_orden', label: 'Número Factura u Orden', type: 'text' },\r\n  { name: 'ubicacion', label: 'Ubicación', type: 'text' },\r\n  {\r\n    name: 'custodia',\r\n    label: 'Custodia',\r\n    type: 'select',\r\n    options: ['Área A', 'Área B', 'Área C'],\r\n  },\r\n  {\r\n    name: 'proveedor',\r\n    label: 'Proveedor',\r\n    type: 'select',\r\n    options: ['Proveedor 1', 'Proveedor 2', 'Proveedor 3'],\r\n  },\r\n  { name: 'fecha_ingreso', label: 'Fecha de Ingreso', type: 'datetime-local' },\r\n  { name: 'fecha_entrega', label: 'Fecha de Entrega', type: 'datetime-local' },\r\n  {\r\n    name: 'tipo_movimiento',\r\n    label: 'Tipo de Movimiento',\r\n    type: 'select',\r\n    options: ['Traslado', 'Ventas', 'Garantías', 'Devoluciones', 'Dar baja', 'Buscar'],\r\n  },\r\n  { name: 'descripcion', label: 'Descripción', type: 'textarea' },\r\n];\r\n\r\nexport function obtenerCamposPorAccion(accion) {\r\n  let campos = [...camposBase];\r\n\r\n  if (accion === 'Entradas') {\r\n    campos = campos.filter(c => c.name !== 'fecha_entrega');\r\n    campos = campos.filter(c => c.name !== 'fecha_ingreso' || c.name === 'tipo_movimiento');\r\n  } else if (accion === 'Salidas') {\r\n    campos = campos.filter(c => c.name !== 'fecha_ingreso');\r\n  } else if (accion === 'Modificar' || accion === 'Buscar') {\r\n    campos = campos.map(c => ({ ...c, required: false }));\r\n  } else if (accion === 'Dar de Baja' || accion === 'Habilitar') {\r\n    campos.push({ name: 'estado', label: 'Estado', type: 'select', options: ['activo', 'dar de baja'] });\r\n  }\r\n\r\n  if (accion === 'Ver') {\r\n    return [];\r\n  }\r\n\r\n  return campos;\r\n}\r\n"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAG,CACjB;EAAEC,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC3C;EAAEF,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE,qBAAqB;EAAEC,IAAI,EAAE;AAAO,CAAC,EAC9D;EAAEF,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAS,CAAC,EACvD;EAAEF,IAAI,EAAE,sBAAsB;EAAEC,KAAK,EAAE,wBAAwB;EAAEC,IAAI,EAAE;AAAO,CAAC,EAC/E;EAAEF,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAO,CAAC,EACvD;EACEF,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,UAAU;EACjBC,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ;AACxC,CAAC,EACD;EACEH,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,WAAW;EAClBC,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa;AACvD,CAAC,EACD;EAAEH,IAAI,EAAE,eAAe;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAiB,CAAC,EAC5E;EAAEF,IAAI,EAAE,eAAe;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAiB,CAAC,EAC5E;EACEF,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE,oBAAoB;EAC3BC,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ;AACnF,CAAC,EACD;EAAEH,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAW,CAAC,CAChE;AAED,OAAO,SAASE,sBAAsBA,CAACC,MAAM,EAAE;EAC7C,IAAIC,MAAM,GAAG,CAAC,GAAGP,UAAU,CAAC;EAE5B,IAAIM,MAAM,KAAK,UAAU,EAAE;IACzBC,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACR,IAAI,KAAK,eAAe,CAAC;IACvDM,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACR,IAAI,KAAK,eAAe,IAAIQ,CAAC,CAACR,IAAI,KAAK,iBAAiB,CAAC;EACzF,CAAC,MAAM,IAAIK,MAAM,KAAK,SAAS,EAAE;IAC/BC,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACR,IAAI,KAAK,eAAe,CAAC;EACzD,CAAC,MAAM,IAAIK,MAAM,KAAK,WAAW,IAAIA,MAAM,KAAK,QAAQ,EAAE;IACxDC,MAAM,GAAGA,MAAM,CAACG,GAAG,CAACD,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAEE,QAAQ,EAAE;IAAM,CAAC,CAAC,CAAC;EACvD,CAAC,MAAM,IAAIL,MAAM,KAAK,aAAa,IAAIA,MAAM,KAAK,WAAW,EAAE;IAC7DC,MAAM,CAACK,IAAI,CAAC;MAAEX,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAE,CAAC,QAAQ,EAAE,aAAa;IAAE,CAAC,CAAC;EACtG;EAEA,IAAIE,MAAM,KAAK,KAAK,EAAE;IACpB,OAAO,EAAE;EACX;EAEA,OAAOC,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}