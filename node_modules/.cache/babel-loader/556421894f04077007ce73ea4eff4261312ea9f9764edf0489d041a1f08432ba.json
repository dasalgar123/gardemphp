{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANDRES\\\\Documents\\\\ADSO\\\\TRANSVERSAL\\\\TRANSVERSAL PROGRAMACIION\\\\PROYECTO\\\\protecto stely\\\\CatalogoReact\\\\catalogoRopa\\\\src\\\\componentes\\\\elementos\\\\Agente.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../css/agente.css'; // Usaremos el CSS que ya existe en el proyecto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Agente = ({\n  onSelectCategory,\n  categorias = []\n}) => {\n  _s();\n  var _messages;\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const initialMessage = {\n    from: 'bot',\n    text: '¡Hola! Soy tu asistente virtual. ¿Cómo puedo ayudarte hoy?',\n    options: ['Ver Productos', 'Medios de Pago', 'Horarios de Atención']\n  };\n  useEffect(() => {\n    setMessages([initialMessage]);\n  }, []);\n  const chatBodyRef = useRef(null);\n\n  // Efecto para hacer scroll hacia abajo cada vez que se añade un mensaje\n  useEffect(() => {\n    if (chatBodyRef.current) {\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n    if (!isOpen && messages.length === 0) {\n      setMessages([initialMessage]);\n    }\n  };\n  const handleOptionClick = option => {\n    const userMessage = {\n      from: 'user',\n      text: option\n    };\n    let botResponse;\n    if (categorias.includes(option)) {\n      onSelectCategory(option);\n      botResponse = {\n        from: 'bot',\n        text: `Perfecto, he filtrado el catálogo para mostrarte: ${option}. ¿Necesitas algo más?`,\n        options: initialMessage.options\n      };\n    } else {\n      switch (option) {\n        case 'Ver Productos':\n          botResponse = {\n            from: 'bot',\n            text: '¡Claro! Elige una categoría para ver nuestros productos.',\n            options: [...categorias, 'Volver al menú principal']\n          };\n          break;\n        case 'Medios de Pago':\n          botResponse = {\n            from: 'bot',\n            text: 'Aceptamos tarjetas de crédito, débito, y transferencias por Nequi y Daviplata.',\n            options: ['Volver al menú principal']\n          };\n          break;\n        case 'Horarios de Atención':\n          botResponse = {\n            from: 'bot',\n            text: 'Nuestros horarios son de Lunes a Sábado, de 9:00 AM a 6:00 PM.',\n            options: ['Volver al menú principal']\n          };\n          break;\n        case 'Volver al menú principal':\n          botResponse = initialMessage;\n          break;\n        default:\n          botResponse = {\n            from: 'bot',\n            text: 'No entendí esa opción, por favor elige una de las disponibles.',\n            options: initialMessage.options\n          };\n          break;\n      }\n    }\n\n    // Para \"Volver al menú principal\", reemplazamos los mensajes para no alargar la conversación\n    if (option === 'Volver al menú principal') {\n      setMessages([userMessage, botResponse]);\n    } else {\n      setMessages([...messages, userMessage, botResponse]);\n    }\n  };\n  const currentOptions = ((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : _messages.options) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-window ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Asistente Virtual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          className: \"close-btn\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        ref: chatBodyRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-container ${msg.from}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.from}`,\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: currentOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option),\n          className: \"option-btn\",\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChat,\n      className: \"chat-toggle-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Agente, \"ivLkH9Exx2O44E+H3cW+ierGZ10=\");\n_c = Agente;\nexport default Agente;\nvar _c;\n$RefreshReg$(_c, \"Agente\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Agente","onSelectCategory","categorias","_s","_messages","isOpen","setIsOpen","messages","setMessages","initialMessage","from","text","options","chatBodyRef","current","scrollTop","scrollHeight","toggleChat","length","handleOptionClick","option","userMessage","botResponse","includes","currentOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/ANDRES/Documents/ADSO/TRANSVERSAL/TRANSVERSAL PROGRAMACIION/PROYECTO/protecto stely/CatalogoReact/catalogoRopa/src/componentes/elementos/Agente.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport '../css/agente.css'; // Usaremos el CSS que ya existe en el proyecto\r\n\r\nconst Agente = ({ onSelectCategory, categorias = [] }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  \r\n  const initialMessage = { \r\n    from: 'bot', \r\n    text: '¡Hola! Soy tu asistente virtual. ¿Cómo puedo ayudarte hoy?', \r\n    options: ['Ver Productos', 'Medios de Pago', 'Horarios de Atención'] \r\n  };\r\n\r\n  useEffect(() => {\r\n    setMessages([initialMessage]);\r\n  }, []);\r\n\r\n  const chatBodyRef = useRef(null);\r\n\r\n  // Efecto para hacer scroll hacia abajo cada vez que se añade un mensaje\r\n  useEffect(() => {\r\n    if (chatBodyRef.current) {\r\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const toggleChat = () => {\r\n    setIsOpen(!isOpen);\r\n    if (!isOpen && messages.length === 0) {\r\n      setMessages([initialMessage]);\r\n    }\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    const userMessage = { from: 'user', text: option };\r\n    let botResponse;\r\n\r\n    if (categorias.includes(option)) {\r\n      onSelectCategory(option);\r\n      botResponse = { from: 'bot', text: `Perfecto, he filtrado el catálogo para mostrarte: ${option}. ¿Necesitas algo más?`, options: initialMessage.options };\r\n    } else {\r\n      switch (option) {\r\n        case 'Ver Productos':\r\n          botResponse = { from: 'bot', text: '¡Claro! Elige una categoría para ver nuestros productos.', options: [...categorias, 'Volver al menú principal'] };\r\n          break;\r\n        case 'Medios de Pago':\r\n          botResponse = { from: 'bot', text: 'Aceptamos tarjetas de crédito, débito, y transferencias por Nequi y Daviplata.', options: ['Volver al menú principal'] };\r\n          break;\r\n        case 'Horarios de Atención':\r\n          botResponse = { from: 'bot', text: 'Nuestros horarios son de Lunes a Sábado, de 9:00 AM a 6:00 PM.', options: ['Volver al menú principal'] };\r\n          break;\r\n        case 'Volver al menú principal':\r\n          botResponse = initialMessage;\r\n          break;\r\n        default:\r\n          botResponse = { from: 'bot', text: 'No entendí esa opción, por favor elige una de las disponibles.', options: initialMessage.options };\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Para \"Volver al menú principal\", reemplazamos los mensajes para no alargar la conversación\r\n    if (option === 'Volver al menú principal') {\r\n      setMessages([userMessage, botResponse]);\r\n    } else {\r\n      setMessages([...messages, userMessage, botResponse]);\r\n    }\r\n  };\r\n\r\n  const currentOptions = messages[messages.length - 1]?.options || [];\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className={`chat-window ${isOpen ? 'open' : ''}`}>\r\n        <div className=\"chat-header\">\r\n          <h2>Asistente Virtual</h2>\r\n          <button onClick={toggleChat} className=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div className=\"chat-body\" ref={chatBodyRef}>\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`message-container ${msg.from}`}>\r\n              <div className={`message ${msg.from}`}>\r\n                {msg.text}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-footer\">\r\n          {currentOptions.map((option, index) => (\r\n            <button key={index} onClick={() => handleOptionClick(option)} className=\"option-btn\">\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button onClick={toggleChat} className=\"chat-toggle-btn\">\r\n        <span>💬</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Agente; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}