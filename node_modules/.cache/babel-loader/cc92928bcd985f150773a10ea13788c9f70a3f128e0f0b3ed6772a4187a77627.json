{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANDRES\\\\Documents\\\\ADSO\\\\TRANSVERSAL\\\\TRANSVERSAL PROGRAMACIION\\\\PROYECTO\\\\protecto stely\\\\CatalogoReact\\\\catalogoRopa\\\\src\\\\componentes\\\\elementos\\\\Agente.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../css/agente.css';\nimport avatar from '../img/logo.jpg'; // Importamos el avatar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Agente = ({\n  onSelectCategory,\n  categorias = []\n}) => {\n  _s();\n  var _messages;\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const initialMessage = {\n    from: 'bot',\n    text: '¡Hola! Soy Daniel, tu asesor de estilo personal. He seleccionado lo mejor para ti. ¿Listo/a para encontrar prendas increíbles que te harán destacar?',\n    options: ['¡Muéstrame los productos!', '¿Cómo puedo pagar?', 'Nuestros horarios']\n  };\n\n  // Cargar el mensaje inicial\n  useEffect(() => {\n    setMessages([initialMessage]);\n  }, []);\n  const chatBodyRef = useRef(null);\n\n  // Scroll automático\n  useEffect(() => {\n    if (chatBodyRef.current) {\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionClick = option => {\n    const userMessage = {\n      from: 'user',\n      text: option\n    };\n    let botResponse;\n    if (categorias.includes(option)) {\n      onSelectCategory(option);\n      botResponse = {\n        from: 'bot',\n        text: `¡Excelente elección! La línea de ${option} tiene piezas espectaculares. Ya puedes verlas. ¿Qué te parece si añades tu favorita al carrito antes de que se agote?`,\n        options: initialMessage.options\n      };\n    } else {\n      switch (option) {\n        case '¡Muéstrame los productos!':\n          botResponse = {\n            from: 'bot',\n            text: '¡Vamos allá! Cada categoría tiene un estilo único. ¿Cuál te llama más la atención para empezar a descubrir tus nuevos favoritos?',\n            options: [...categorias, 'Volver']\n          };\n          break;\n        case '¿Cómo puedo pagar?':\n          botResponse = {\n            from: 'bot',\n            text: '¡Hicimos que pagar sea muy fácil y seguro! Aceptamos todas las tarjetas, Nequi y Daviplata. ¿Cuál producto te empacamos?',\n            options: ['¡Muéstrame los productos!', 'Volver']\n          };\n          break;\n        case 'Nuestros horarios':\n          botResponse = {\n            from: 'bot',\n            text: 'Estamos para ti de Lunes a Sábado, de 9 AM a 6 PM. ¡Siempre es un buen momento para darte un gusto!',\n            options: ['Volver']\n          };\n          break;\n        case 'Volver':\n          botResponse = initialMessage;\n          break;\n        default:\n          botResponse = {\n            from: 'bot',\n            text: 'No estoy seguro de entenderte. ¿Qué te parece si te muestro nuestros productos más vendidos para inspirarte?',\n            options: initialMessage.options\n          };\n          break;\n      }\n    }\n    setMessages(prev => [...prev.filter(m => m.from === 'user' || m.text !== option), userMessage, botResponse]);\n  };\n  const currentOptions = ((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : _messages.options) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-window ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar,\n          alt: \"Avatar de Daniel\",\n          className: \"chat-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Daniel, tu Asesor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          className: \"close-btn\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        ref: chatBodyRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-container ${msg.from}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.from}`,\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: currentOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option),\n          className: \"option-btn\",\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChat,\n      className: \"chat-toggle-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Agente, \"ivLkH9Exx2O44E+H3cW+ierGZ10=\");\n_c = Agente;\nexport default Agente;\nvar _c;\n$RefreshReg$(_c, \"Agente\");","map":{"version":3,"names":["React","useState","useRef","useEffect","avatar","jsxDEV","_jsxDEV","Agente","onSelectCategory","categorias","_s","_messages","isOpen","setIsOpen","messages","setMessages","initialMessage","from","text","options","chatBodyRef","current","scrollTop","scrollHeight","toggleChat","handleOptionClick","option","userMessage","botResponse","includes","prev","filter","m","currentOptions","length","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/ANDRES/Documents/ADSO/TRANSVERSAL/TRANSVERSAL PROGRAMACIION/PROYECTO/protecto stely/CatalogoReact/catalogoRopa/src/componentes/elementos/Agente.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport '../css/agente.css'; \r\nimport avatar from '../img/logo.jpg'; // Importamos el avatar\r\n\r\nconst Agente = ({ onSelectCategory, categorias = [] }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  \r\n  const initialMessage = { \r\n    from: 'bot', \r\n    text: '¡Hola! Soy Daniel, tu asesor de estilo personal. He seleccionado lo mejor para ti. ¿Listo/a para encontrar prendas increíbles que te harán destacar?', \r\n    options: ['¡Muéstrame los productos!', '¿Cómo puedo pagar?', 'Nuestros horarios'] \r\n  };\r\n\r\n  // Cargar el mensaje inicial\r\n  useEffect(() => {\r\n    setMessages([initialMessage]);\r\n  }, []);\r\n\r\n  const chatBodyRef = useRef(null);\r\n\r\n  // Scroll automático\r\n  useEffect(() => {\r\n    if (chatBodyRef.current) {\r\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const toggleChat = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    const userMessage = { from: 'user', text: option };\r\n    let botResponse;\r\n\r\n    if (categorias.includes(option)) {\r\n      onSelectCategory(option);\r\n      botResponse = { from: 'bot', text: `¡Excelente elección! La línea de ${option} tiene piezas espectaculares. Ya puedes verlas. ¿Qué te parece si añades tu favorita al carrito antes de que se agote?`, options: initialMessage.options };\r\n    } else {\r\n      switch (option) {\r\n        case '¡Muéstrame los productos!':\r\n          botResponse = { from: 'bot', text: '¡Vamos allá! Cada categoría tiene un estilo único. ¿Cuál te llama más la atención para empezar a descubrir tus nuevos favoritos?', options: [...categorias, 'Volver'] };\r\n          break;\r\n        case '¿Cómo puedo pagar?':\r\n          botResponse = { from: 'bot', text: '¡Hicimos que pagar sea muy fácil y seguro! Aceptamos todas las tarjetas, Nequi y Daviplata. ¿Cuál producto te empacamos?', options: ['¡Muéstrame los productos!', 'Volver'] };\r\n          break;\r\n        case 'Nuestros horarios':\r\n          botResponse = { from: 'bot', text: 'Estamos para ti de Lunes a Sábado, de 9 AM a 6 PM. ¡Siempre es un buen momento para darte un gusto!', options: ['Volver'] };\r\n          break;\r\n        case 'Volver':\r\n          botResponse = initialMessage;\r\n          break;\r\n        default:\r\n          botResponse = { from: 'bot', text: 'No estoy seguro de entenderte. ¿Qué te parece si te muestro nuestros productos más vendidos para inspirarte?', options: initialMessage.options };\r\n          break;\r\n      }\r\n    }\r\n\r\n    setMessages(prev => [...prev.filter(m => m.from === 'user' || m.text !== option), userMessage, botResponse]);\r\n  };\r\n\r\n  const currentOptions = messages[messages.length - 1]?.options || [];\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className={`chat-window ${isOpen ? 'open' : ''}`}>\r\n        <div className=\"chat-header\">\r\n          <img src={avatar} alt=\"Avatar de Daniel\" className=\"chat-avatar\" />\r\n          <h2>Daniel, tu Asesor</h2>\r\n          <button onClick={toggleChat} className=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div className=\"chat-body\" ref={chatBodyRef}>\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`message-container ${msg.from}`}>\r\n              <div className={`message ${msg.from}`}>\r\n                {msg.text}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-footer\">\r\n          {currentOptions.map((option, index) => (\r\n            <button key={index} onClick={() => handleOptionClick(option)} className=\"option-btn\">\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button onClick={toggleChat} className=\"chat-toggle-btn\">\r\n        <span>💬</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Agente; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}